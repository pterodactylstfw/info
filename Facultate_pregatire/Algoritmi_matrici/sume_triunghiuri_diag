/*
REGULI DIAGONALE MATRICE 
*/

void diagonale(){

for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
        // Element pe diagonala principală
        if (i == j) {
            std::cout << "Elementul (" << i << ", " << j << ") 
            este pe diagonala principală.\n";
        }
        
        // Deasupra diagonalei principale
        if (i < j) {
            std::cout << "Elementul (" << i << ", " << j << ") 
            este deasupra diagonalei principale.\n";
        }

        // Sub diagonalei principale
        if (i > j) {
            std::cout << "Elementul (" << i << ", " << j << ") 
            este sub diagonalei principale.\n";
        }
        
        // Element pe diagonala secundară
        if (j == n - i - 1) {
            std::cout << "Elementul (" << i << ", " << j << ") 
            este pe diagonala secundară.\n";
        }

        // Deasupra diagonalei secundare
        if (i < n - i - 1) {
            std::cout << "Elementul (" << i << ", " << j << ") 
            este deasupra diagonalei secundare.\n";
        }

        // Sub diagonalei secundare
        if (i > n - i - 1) {
            std::cout << "Elementul (" << i << ", " << j << ") 
            este sub diagonalei secundare.\n";
        }
    }
}
}

#include <iostream>
#include <vector>

std::vector<std::vector<int>> citire() {
	int n;
	std::cin >> n;
	std::vector<std::vector<int>> matrice;
	matrice.resize(n);
	for (int i = 0; i < matrice.size(); i++) {
		matrice[i].resize(n);
		for (int j = 0; j < matrice[i].size(); j++) {
			std::cin >> matrice[i][j];
		}
	}
	return matrice;
}

/*
2. Se citeste o matrice patratica cu n linii si n coloane(n <= 100), cu
elemente numere naturale din intervalul[0, 1000].Sa se determine sumele
elementelor celor 4 triunghiuri determinate de diagonala principala si cea
secundara.
*/


struct sume {
	int nord = 0, sud = 0, est = 0, vest = 0;
};

sume calculare(const std::vector<std::vector<int>>& matrice) {
    sume suma;
    int n = matrice.size();

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (i < j && i + j < n - 1) {
                suma.nord += matrice[i][j]; 
            }
            else if (i > j && i + j > n - 1) {
                suma.sud += matrice[i][j];   
            }
            else if (i < j && i + j > n - 1) {
                suma.est += matrice[i][j];   
            }
            else if (i > j && i + j < n - 1) {
                suma.vest += matrice[i][j]; 
            }
        }
    }
    return suma;
}

void afisare(sume suma) {
	std::cout << suma.nord << " " << suma.sud << " " << suma.est << " " << suma.vest;
}

int main() {
	std::vector<std::vector<int>> matrice = citire();
	sume suma = calculare(matrice);
	afisare(suma);
}
