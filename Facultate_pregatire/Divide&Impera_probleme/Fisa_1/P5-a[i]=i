/*
5. Se da un sir de n elemente. Sirul este sortat descrescator si are elemente distincte. Se doreste
identificarea urmatoarei situatii: exista un index i pentru care A[i] = i. Sa se elaboreze un
algoritm D&I cu complexitate O (log n).
*/

#include <iostream>
#include <vector>

std::vector<int> citire() {
	int dim;
	std::cin >> dim;
	std::vector<int> v;
	v.resize(dim);
	for (int i = 0; i < v.size(); i++) {
		std::cin >> v[i];
	}
	return v;
}

bool cautare(std::vector<int> v, int st, int dr) {
	while (st <= dr) {
		int m = (st + dr) / 2;
		if (v[m] == m) {
			return true;
		}
		if (v[m] > m) {
			st = m + 1;
		}
		else dr = m - 1;
	}
	return false;
}

int main() {
	std::vector<int> v = citire();
	std::cout << cautare(v, 0, v.size() - 1);
}