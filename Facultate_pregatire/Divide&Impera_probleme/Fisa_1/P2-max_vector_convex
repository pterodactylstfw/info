/*
2. Se da un vector convex (elementele sale sunt in ordine strict crescatoare pana la o anumita
pozitie, dupa care sunt strict descrescatoare). Sa se determine maximul din vector cu ajutorul
unui algoritm de tip D & I. Exemplu: v = {1, 2, 3, 4, 5, 6, 4, 3, 2}. max=6 
*/

#include <iostream>
#include <vector>

std::vector<int> citire() {
	int dim;
	std::cin >> dim;
	std::vector<int> v;
	v.resize(dim);
	for (int i = 0; i < v.size(); i++) {
		std::cin >> v[i];
	}
	return v;
}

int cautareMaxim(std::vector<int> v) {
	int st = 0, dr = v.size() - 1;
	if (v[0] > v[1])return v[0];
	if (v[v.size() - 1] > v[v.size() - 2])return v[v.size() - 1];
	while (st <= dr) {
		int m = (st + dr) / 2;
		if (m == 0 || m == v.size() - 1) return m;
		if (v[m - 1] < v[m] && v[m] > v[m + 1])return v[m];
		else if (v[m - 1] < v[m] && v[m] < v[m + 1]) st = m + 1;
		else if (v[m - 1] > v[m] && v[m] > v[m + 1]) dr = m - 1;
	}
}

int main() {
	std::vector<int> v = citire();
	std::cout << cautareMaxim(v);
}