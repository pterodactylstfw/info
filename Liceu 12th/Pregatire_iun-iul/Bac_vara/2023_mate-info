1.

int abundent(int n)
{
    float sn,sk;
    for(int i=1;i<=n;i++)
        if(n%i==0)
            sn+=i;
    sn/=n;
    
    for(int k=1;k<n;k++)
    {
        sk=0;
        for(int i=1;i<=k;i++)
            if(k%i==0)
                sk+=i;
        sk/=k;
        if(sk>sn) return 0;
    }
    return 1;
}

2.

#include <iostream>
#include <fstream>
using namespace std;



int main()
{
    int ns,np;
    cin>>ns>>np;
    int a[51][51];
    for(int i=1;i<=ns;i++)
        for(int j=1;j<=np;j++) cin>>a[i][j];
    
    for(int i=1;i<=ns;i++)
    {
        int pi,pj;
        int mx=0;
        for(int j=1;j<=np;j++)
        {
            if(a[i][j]>mx)
            {
                mx=a[i][j];
                pi=i;pj=j;
                
            }
        }
        cout<<pi<<":"<<pj<<" ";
    }
}



3.

#include <iostream>
#include <fstream>
using namespace std;
ifstream fin("numere.in");
int main()
{
    int sf[100]={0},pf[100]={0};
    int x;
    while(fin>>x)
    {
        if(x>99)
        {
            int s=x%100;
            sf[s]++; //cresc cand e sufix, scad cand e prefix => trebuie sa ramana 0
            while(x>100) x/=10;
            int p=x%100;
            pf[p]++;
        }
        
    }
    int nr=0;
    for(int i=10;i<=99;i++)
        if(pf[i]==sf[i]&&pf[i]>0) nr++;
    cout<<nr;
    
}
